============================================
Comments
============================================

// foo

----

(source_file
  (comment))


============================================
Variables
============================================

foo bar.1.2.3

----

(source_file
  (variable
    (name)
    (value)))



============================================
Include
============================================

#include "*/*.proj"

----

(source_file
  (include
    (string)))


============================================
Con
============================================

con foo
{
}

----

(source_file
  (definition
    (definition_type)
    (identifier)
    (block)))


============================================
Use
============================================

con foo
{
  use bar
}

----

(source_file
  (definition
    (definition_type)
    (identifier)
    (block
      (use_statement
        (identifier)))))



============================================
Variable in block
============================================

workspace foo
{
  compiler_match foo_bar_baz
}

----

(source_file
  (definition
    (definition_type)
    (identifier)
    (block
      (variable
        (name)
        (value)))))



============================================
Conditional definition
============================================

con(ENABLE_FOO) foo
{
}

----

(source_file
  (definition
    (definition_type (identifier))
    (identifier)
    (block)))



============================================
Conditional not
============================================

con(!ENABLE_FOO) foo
{
}

----

(source_file
  (definition
    (definition_type (unary_expression
      (identifier)))
    (identifier)
    (block)))



============================================
Conditional and
============================================

workspace(TARGET_FOO && !ENABLE_BAR) FooBar
{
}

----

(source_file
  (definition
    (definition_type (binary_expression
      (identifier)
      (unary_expression
        (identifier))))
    (identifier)
    (block)))



============================================
Conditional use
============================================

workspace FooBar
{
  use (!ENABLE_FOO) libbar
}

----

(source_file
  (definition
    (definition_type)
    (identifier)
    (block
      (use_statement
        (unary_expression
          (identifier))
        (identifier)))))



============================================
Conditional if
============================================

workspace FooBar
{
  if ENABLE_FOO
    use libbar
  endif
}

----

(source_file
  (definition
    (definition_type)
    (identifier)
    (block
      (if_statement
        (identifier)
        (use_statement
          (identifier))))))
